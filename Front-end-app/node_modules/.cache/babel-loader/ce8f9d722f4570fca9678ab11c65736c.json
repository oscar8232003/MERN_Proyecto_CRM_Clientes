{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\MERN_Proyecto_CRM_Clientes\\\\Front-end-app\\\\src\\\\components\\\\clientes\\\\Clientes.js\";\nimport React, { useEffect, useState } from \"react\";\nimport clienteAxios from \"../../config/axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { verificacionToken } from \"../../config/jwt\"; //Componentes\n\nimport Cliente from \"./Cliente\";\n\nconst Clientes = props => {\n  //States\n  const [clientes, setClientes] = useState([]);\n  const [usuario, setUsuario] = useState({}); //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\n\n  const Token = localStorage.getItem(\"token\"); //Verificamos el Token si es valido o no\n\n  const verificar = verificacionToken(Token); //Consulta GET de datos\n\n  const consultarAPI = async () => {\n    try {\n      const clientesConsulta = await clienteAxios.get(\"/clientes\", {\n        headers: {\n          Authorization: `Bearer ${Token}`\n        }\n      });\n      setClientes(clientesConsulta.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    if (verificar.error) {\n      props.history.push(\"/iniciar-sesion\");\n    }\n\n    setUsuario(verificar);\n    consultarAPI();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Clientes\"), React.createElement(Link, {\n    to: \"/clientes/nuevo\",\n    className: \"btn btn-verde nvo-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" Nuevo Cliente\"), React.createElement(\"ul\", {\n    className: \"listado-clientes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, clientes.map(cliente => React.createElement(Cliente, {\n    cliente: cliente,\n    key: cliente._id,\n    consultarAPI: consultarAPI,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(Clientes);","map":{"version":3,"sources":["C:/Users/oscar/Desktop/MERN_Proyecto_CRM_Clientes/Front-end-app/src/components/clientes/Clientes.js"],"names":["React","useEffect","useState","clienteAxios","Link","withRouter","verificacionToken","Cliente","Clientes","props","clientes","setClientes","usuario","setUsuario","Token","localStorage","getItem","verificar","consultarAPI","clientesConsulta","get","headers","Authorization","data","e","console","log","error","history","push","map","cliente","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC,CAHwB,CAKxB;;AACA,QAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CANwB,CAOxB;;AACA,QAAMC,SAAS,GAAGX,iBAAiB,CAACQ,KAAD,CAAnC,CARwB,CAUxB;;AACA,QAAMI,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,gBAAgB,GAAG,MAAMhB,YAAY,CAACiB,GAAb,CAAiB,WAAjB,EAA8B;AAC3DC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASR,KAAM;AADxB;AADkD,OAA9B,CAA/B;AAKAH,MAAAA,WAAW,CAACQ,gBAAgB,CAACI,IAAlB,CAAX;AACD,KAPD,CAOE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAXD;;AAaAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,SAAS,CAACU,KAAd,EAAqB;AACnBlB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,iBAAnB;AACD;;AACDhB,IAAAA,UAAU,CAACI,SAAD,CAAV;AACAC,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;AAQA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,iBAAV;AAA6B,IAAA,SAAS,EAAC,2BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBAHF,EAOE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACoB,GAAT,CAAaC,OAAO,IACnB,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,GAAG,EAAEA,OAAO,CAACC,GAFf;AAGE,IAAA,YAAY,EAAEd,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CADF;AAmBD,CAnDD;;AAqDA,eAAeb,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { verificacionToken } from \"../../config/jwt\";\r\n\r\n//Componentes\r\nimport Cliente from \"./Cliente\";\r\n\r\nconst Clientes = props => {\r\n  //States\r\n  const [clientes, setClientes] = useState([]);\r\n  const [usuario, setUsuario] = useState({});\r\n\r\n  //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\r\n  const Token = localStorage.getItem(\"token\");\r\n  //Verificamos el Token si es valido o no\r\n  const verificar = verificacionToken(Token);\r\n\r\n  //Consulta GET de datos\r\n  const consultarAPI = async () => {\r\n    try {\r\n      const clientesConsulta = await clienteAxios.get(\"/clientes\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Token}`\r\n        }\r\n      });\r\n      setClientes(clientesConsulta.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (verificar.error) {\r\n      props.history.push(\"/iniciar-sesion\");\r\n    }\r\n    setUsuario(verificar);\r\n    consultarAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Clientes</h2>\r\n\r\n      <Link to={\"/clientes/nuevo\"} className=\"btn btn-verde nvo-cliente\">\r\n        <i className=\"fas fa-plus-circle\"></i> Nuevo Cliente\r\n      </Link>\r\n\r\n      <ul className=\"listado-clientes\">\r\n        {clientes.map(cliente => (\r\n          <Cliente\r\n            cliente={cliente}\r\n            key={cliente._id}\r\n            consultarAPI={consultarAPI}\r\n          ></Cliente>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Clientes);\r\n"]},"metadata":{},"sourceType":"module"}