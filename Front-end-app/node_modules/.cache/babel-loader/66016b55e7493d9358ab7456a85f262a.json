{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Node\\\\Node_ReactJS\\\\Front-end-app\\\\src\\\\components\\\\clientes\\\\EditarCliente.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport clienteAxios from \"../../config/axios\";\nimport Swal from \"sweetalert2\";\nimport { withRouter } from \"react-router-dom\";\nimport { verificacionToken } from \"../../config/jwt\";\n\nconst EditarCliente = props => {\n  //Obtener id\n  const {\n    id\n  } = props.match.params; //Estados\n\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    apellido: \"\",\n    empresa: \"\",\n    email: \"\",\n    telefono: \"\"\n  });\n  const [usuario, setUsuario] = useState({}); //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\n\n  const Token = localStorage.getItem(\"token\"); //Verificamos el Token si es valido o no\n\n  const verificar = verificacionToken(Token); //Funcion para traer datos de la api\n\n  const traerDatos = async () => {\n    const clienteConsulta = await clienteAxios.get(`/clientes/${id}`, {\n      headers: {\n        Authorization: `Bearer ${Token}`\n      }\n    });\n    setCliente(clienteConsulta.data);\n  }; //Traer datos de la api\n\n\n  useEffect(() => {\n    if (verificar.error) {\n      props.history.push(\"/iniciar-sesion\");\n    }\n\n    setUsuario(verificar);\n    traerDatos();\n  }, []);\n  /*2Â° Opcion \r\n  //Use ref para tomar los datos del formulario\r\n  const nombreRef = useRef(\"\");\r\n  const apellidoRef = useRef(\"\");\r\n  const emailRef = useRef(\"\");\r\n  const empresaRef = useRef(\"\");\r\n  const telefonoRef = useRef(\"\");\r\n    */\n  //Codigo de actualizacion del cliente\n\n  const actualizarCliente = e => {\n    e.preventDefault(); //Enviar peticion para la actualizacion\n\n    clienteAxios.put(`/clientes/${cliente._id}`, cliente, {\n      headers: {\n        Authorization: `Bearer ${Token}`\n      }\n    }).then(response => {\n      Swal.fire({\n        title: \"Cliente Modificado\",\n        text: \"Se Modifico correctamente el cliente al sistema\",\n        icon: \"success\",\n        confirmButtonText: \"Perfecto\",\n        showCloseButton: true\n      }).then(() => {\n        //Redireccionar\n        props.history.push(\"/\");\n      });\n    }).catch(error => {\n      Swal.fire({\n        title: \"Hubo un error\",\n        text: \"No se pudo modificar el cliente\",\n        icon: \"error\",\n        confirmButtonText: \"Bueno\",\n        showCloseButton: true\n      }).then(() => {\n        //Redireccionar\n        props.history.push(\"/\");\n      });\n    });\n  }; //Validacion del formulario\n\n\n  const validarCliente = () => {\n    //Destructuring\n    const {\n      nombre,\n      apellido,\n      email,\n      empresa,\n      telefono\n    } = cliente;\n    let valido = true; //Revisar el contenido en el state\n\n    valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n    return valido;\n  }; //Actualizar el state\n\n\n  const actualizarState = e => {\n    setCliente({ ...cliente,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Editar cliente\"), React.createElement(\"form\", {\n    onSubmit: actualizarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Llena todos los campos\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Nombre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nombre Cliente\",\n    name: \"nombre\" //ref={nombreRef}\n    ,\n    defaultValue: cliente.nombre,\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Apellido:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Apellido Cliente\",\n    name: \"apellido\" //ref={apellidoRef}\n    ,\n    defaultValue: cliente.apellido,\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Empresa:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Empresa Cliente\",\n    name: \"empresa\" //ref={empresaRef}\n    ,\n    defaultValue: cliente.empresa,\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Cliente\",\n    name: \"email\" //ref={emailRef}\n    ,\n    defaultValue: cliente.email,\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Tel\\xE9fono:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Tel\\xE9fono Cliente\",\n    name: \"telefono\" //ref={telefonoRef}\n    ,\n    defaultValue: cliente.telefono,\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul\",\n    value: \"Guardar Cambios\",\n    disabled: validarCliente(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(EditarCliente);","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Node/Node_ReactJS/Front-end-app/src/components/clientes/EditarCliente.js"],"names":["React","useState","useRef","useEffect","clienteAxios","Swal","withRouter","verificacionToken","EditarCliente","props","id","match","params","cliente","setCliente","nombre","apellido","empresa","email","telefono","usuario","setUsuario","Token","localStorage","getItem","verificar","traerDatos","clienteConsulta","get","headers","Authorization","data","error","history","push","actualizarCliente","e","preventDefault","put","_id","then","response","fire","title","text","icon","confirmButtonText","showCloseButton","catch","validarCliente","valido","length","actualizarState","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { verificacionToken } from \"../../config/jwt\";\r\n\r\nconst EditarCliente = props => {\r\n  //Obtener id\r\n  const { id } = props.match.params;\r\n\r\n  //Estados\r\n  const [cliente, setCliente] = useState({\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    empresa: \"\",\r\n    email: \"\",\r\n    telefono: \"\"\r\n  });\r\n\r\n  const [usuario, setUsuario] = useState({});\r\n\r\n  //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\r\n  const Token = localStorage.getItem(\"token\");\r\n  //Verificamos el Token si es valido o no\r\n  const verificar = verificacionToken(Token);\r\n\r\n  //Funcion para traer datos de la api\r\n  const traerDatos = async () => {\r\n    const clienteConsulta = await clienteAxios.get(`/clientes/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`\r\n      }\r\n    });\r\n    setCliente(clienteConsulta.data);\r\n  };\r\n\r\n  //Traer datos de la api\r\n  useEffect(() => {\r\n    if (verificar.error) {\r\n      props.history.push(\"/iniciar-sesion\");\r\n    }\r\n    setUsuario(verificar);\r\n    traerDatos();\r\n  }, []);\r\n\r\n  /*2Â° Opcion \r\n  //Use ref para tomar los datos del formulario\r\n  const nombreRef = useRef(\"\");\r\n  const apellidoRef = useRef(\"\");\r\n  const emailRef = useRef(\"\");\r\n  const empresaRef = useRef(\"\");\r\n  const telefonoRef = useRef(\"\");\r\n    */\r\n\r\n  //Codigo de actualizacion del cliente\r\n  const actualizarCliente = e => {\r\n    e.preventDefault();\r\n\r\n    //Enviar peticion para la actualizacion\r\n    clienteAxios\r\n      .put(`/clientes/${cliente._id}`, cliente, {\r\n        headers: {\r\n          Authorization: `Bearer ${Token}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        Swal.fire({\r\n          title: \"Cliente Modificado\",\r\n          text: \"Se Modifico correctamente el cliente al sistema\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Perfecto\",\r\n          showCloseButton: true\r\n        }).then(() => {\r\n          //Redireccionar\r\n          props.history.push(\"/\");\r\n        });\r\n      })\r\n      .catch(error => {\r\n        Swal.fire({\r\n          title: \"Hubo un error\",\r\n          text: \"No se pudo modificar el cliente\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Bueno\",\r\n          showCloseButton: true\r\n        }).then(() => {\r\n          //Redireccionar\r\n          props.history.push(\"/\");\r\n        });\r\n      });\r\n  };\r\n\r\n  //Validacion del formulario\r\n  const validarCliente = () => {\r\n    //Destructuring\r\n    const { nombre, apellido, email, empresa, telefono } = cliente;\r\n    let valido = true;\r\n    //Revisar el contenido en el state\r\n    valido =\r\n      !nombre.length ||\r\n      !apellido.length ||\r\n      !email.length ||\r\n      !empresa.length ||\r\n      !telefono.length;\r\n\r\n    return valido;\r\n  };\r\n\r\n  //Actualizar el state\r\n  const actualizarState = e => {\r\n    setCliente({\r\n      ...cliente,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Editar cliente</h2>\r\n      <form onSubmit={actualizarCliente}>\r\n        <legend>Llena todos los campos</legend>\r\n\r\n        <div className=\"campo\">\r\n          <label>Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre Cliente\"\r\n            name=\"nombre\"\r\n            //ref={nombreRef}\r\n            defaultValue={cliente.nombre}\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Apellido:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Apellido Cliente\"\r\n            name=\"apellido\"\r\n            //ref={apellidoRef}\r\n            defaultValue={cliente.apellido}\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Empresa:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Empresa Cliente\"\r\n            name=\"empresa\"\r\n            //ref={empresaRef}\r\n            defaultValue={cliente.empresa}\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Cliente\"\r\n            name=\"email\"\r\n            //ref={emailRef}\r\n            defaultValue={cliente.email}\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>TelÃ©fono:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"TelÃ©fono Cliente\"\r\n            name=\"telefono\"\r\n            //ref={telefonoRef}\r\n            defaultValue={cliente.telefono}\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"enviar\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-azul\"\r\n            value=\"Guardar Cambios\"\r\n            disabled={validarCliente()}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditarCliente);\r\n"]},"metadata":{},"sourceType":"module"}