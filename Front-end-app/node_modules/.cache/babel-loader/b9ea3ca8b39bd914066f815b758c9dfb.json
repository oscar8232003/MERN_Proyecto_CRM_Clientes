{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Node\\\\Node_ReactJS\\\\Front-end-app\\\\src\\\\components\\\\layout\\\\Header.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { verificacionToken } from \"../../config/jwt\";\nimport { urlsLibres, verificarUrl } from \"../../config/urlsLibres\";\n\nconst Header = ({\n  location,\n  history,\n  path,\n  setPath\n}) => {\n  const [error, setError] = useState(null); //Funcion para cerrar sesion\n\n  const cerrarSesion = () => {\n    localStorage.setItem(\"token\", \"\");\n    history.push(\"/iniciar-sesion\");\n  }; //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\n\n\n  const Token = localStorage.getItem(\"token\"); //Verificamos el Token si es valido o no\n\n  const verificar = verificacionToken(Token); //Verificamos si la url actual esta dentro de las urls Libres\n\n  let urlLibre = verificarUrl(location.pathname, urlsLibres());\n  useEffect(() => {\n    if (verificar.error && error == null) {\n      setError(verificar);\n\n      if (!urlLibre) {\n        history.push(\"/iniciar-sesion\");\n      }\n    }\n\n    if (!verificar.error && error !== null) {\n      setError(null);\n    }\n  }, [path]);\n\n  if (path !== location.pathname) {\n    setPath(location.pathname);\n  }\n\n  return React.createElement(\"header\", {\n    className: \"barra\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contenedor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contenido-barra\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"CRM - Administrador de Clientes\"), !error && !urlLibre ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-rojo\",\n    onClick: cerrarSesion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"far fa-times-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \" Cerrar Sesion\") : null)));\n};\n\nexport default withRouter(Header);","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Node/Node_ReactJS/Front-end-app/src/components/layout/Header.js"],"names":["React","useState","useEffect","withRouter","verificacionToken","urlsLibres","verificarUrl","Header","location","history","path","setPath","error","setError","cerrarSesion","localStorage","setItem","push","Token","getItem","verificar","urlLibre","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,yBAAzC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA;AAA3B,CAAD,KAA0C;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC,CADuD,CAGvD;;AACA,QAAMa,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;AACAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,iBAAb;AACD,GAHD,CAJuD,CASvD;;;AACA,QAAMC,KAAK,GAAGH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAd,CAVuD,CAWvD;;AACA,QAAMC,SAAS,GAAGhB,iBAAiB,CAACc,KAAD,CAAnC,CAZuD,CAavD;;AACA,MAAIG,QAAQ,GAAGf,YAAY,CAACE,QAAQ,CAACc,QAAV,EAAoBjB,UAAU,EAA9B,CAA3B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,SAAS,CAACR,KAAV,IAAmBA,KAAK,IAAI,IAAhC,EAAsC;AACpCC,MAAAA,QAAQ,CAACO,SAAD,CAAR;;AACA,UAAI,CAACC,QAAL,EAAe;AACbZ,QAAAA,OAAO,CAACQ,IAAR,CAAa,iBAAb;AACD;AACF;;AACD,QAAI,CAACG,SAAS,CAACR,KAAX,IAAoBA,KAAK,KAAK,IAAlC,EAAwC;AACtCC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAVQ,EAUN,CAACH,IAAD,CAVM,CAAT;;AAYA,MAAIA,IAAI,KAAKF,QAAQ,CAACc,QAAtB,EAAgC;AAC9BX,IAAAA,OAAO,CAACH,QAAQ,CAACc,QAAV,CAAP;AACD;;AAED,SACE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEG,CAACV,KAAD,IAAU,CAACS,QAAX,GACC;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,OAAO,EAAEP,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,mBADD,GAQG,IAVN,CADF,CADF,CADF;AAkBD,CAlDD;;AAoDA,eAAeX,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { verificacionToken } from \"../../config/jwt\";\r\nimport { urlsLibres, verificarUrl } from \"../../config/urlsLibres\";\r\n\r\nconst Header = ({ location, history, path, setPath }) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  //Funcion para cerrar sesion\r\n  const cerrarSesion = () => {\r\n    localStorage.setItem(\"token\", \"\");\r\n    history.push(\"/iniciar-sesion\");\r\n  };\r\n\r\n  //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\r\n  const Token = localStorage.getItem(\"token\");\r\n  //Verificamos el Token si es valido o no\r\n  const verificar = verificacionToken(Token);\r\n  //Verificamos si la url actual esta dentro de las urls Libres\r\n  let urlLibre = verificarUrl(location.pathname, urlsLibres());\r\n\r\n  useEffect(() => {\r\n    if (verificar.error && error == null) {\r\n      setError(verificar);\r\n      if (!urlLibre) {\r\n        history.push(\"/iniciar-sesion\");\r\n      }\r\n    }\r\n    if (!verificar.error && error !== null) {\r\n      setError(null);\r\n    }\r\n  }, [path]);\r\n\r\n  if (path !== location.pathname) {\r\n    setPath(location.pathname);\r\n  }\r\n\r\n  return (\r\n    <header className=\"barra\">\r\n      <div className=\"contenedor\">\r\n        <div className=\"contenido-barra\">\r\n          <h1>CRM - Administrador de Clientes</h1>\r\n          {!error && !urlLibre ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-rojo\"\r\n              onClick={cerrarSesion}\r\n            >\r\n              <i className=\"far fa-times-circle\"></i> Cerrar Sesion\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n"]},"metadata":{},"sourceType":"module"}