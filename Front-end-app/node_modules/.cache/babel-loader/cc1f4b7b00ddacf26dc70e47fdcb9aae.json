{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Node\\\\Node_ReactJS\\\\Front-end-app\\\\src\\\\components\\\\pedidos\\\\NuevoPedido.js\";\nimport React, { useState, useEffect } from \"react\";\nimport clienteAxios from \"../../config/axios\";\nimport Swal from \"sweetalert2\";\nimport { withRouter } from \"react-router-dom\";\nimport { verificacionToken } from \"../../config/jwt\"; //Componentes\n\nimport Error from \"../layout/Error\";\nimport ProductoPedido from \"./ProductoPedido\";\n\nconst NuevoPedido = props => {\n  //State\n  const [cliente, setCliente] = useState({});\n  const [busqueda, setBusqueda] = useState(\"\");\n  const [productos, setProductos] = useState([]); //const [productosSeleccionados, setProductosSeleccionados] = useState([]);\n\n  const [total, setTotal] = useState(0);\n  const [usuario, setUsuario] = useState({}); //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\n\n  const Token = localStorage.getItem(\"token\"); //Verificamos el Token si es valido o no\n\n  const verificar = verificacionToken(Token); //Traer id del cliente\n\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props; //Consultar la API para traer datos del cliente\n\n  const consultarApiCliente = async () => {\n    try {\n      const clienteData = await clienteAxios.get(`/clientes/${id}`, {\n        headers: {\n          Authorization: `Bearer ${Token}`\n        }\n      });\n      setCliente(clienteData.data);\n    } catch (e) {\n      setCliente({});\n    }\n  }; //Consultar la API para traer productos consultados\n\n\n  const consultarApiProductos = async prod => {\n    try {\n      const productosData = await clienteAxios.post(`/productos/busqueda/${prod}`, {\n        headers: {\n          Authorization: `Bearer ${Token}`\n        }\n      });\n\n      if (productosData.data[0]) {\n        let productoResultado = productosData.data[0]; // agregar la llave \"producto\" (copia de id)\n\n        productoResultado.producto = productosData.data[0]._id;\n        productoResultado.cantidad = 0;\n        setProductos([...productos, productoResultado]);\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Lo siento no hay resultados para esa busqueda\"\n        });\n      }\n    } catch (e) {\n      setProductos([]);\n    }\n  }; //UseEffect\n\n\n  useEffect(() => {\n    if (verificar.error) {\n      props.history.push(\"/iniciar-sesion\");\n    }\n\n    setUsuario(verificar);\n    consultarApiCliente();\n  }, []);\n  useEffect(() => {\n    if (verificar.error) {\n      props.history.push(\"/iniciar-sesion\");\n    }\n\n    setUsuario(verificar);\n    actualizarTotal();\n  }, [productos]); //Funcion para buscar productos\n\n  const buscarProducto = e => {\n    e.preventDefault();\n    consultarApiProductos(busqueda);\n  }; //Funcion para actualizar la cantidad de productos\n\n\n  const disminuirProductos = i => {\n    //Copiar el arreglo original\n    const todosProductos = [...productos]; //Validamos si esta en 0, no puede bajar de 0\n\n    if (todosProductos[i].cantidad === 0) return; //decremento\n\n    todosProductos[i].cantidad--; //Almacenarlo en el state\n\n    setProductos(todosProductos);\n  };\n\n  const aumentarProductos = i => {\n    //Copiar el arreglo original\n    const todosProductos = [...productos]; //aumento\n\n    todosProductos[i].cantidad++; //Almacenarlo en el state\n\n    setProductos(todosProductos);\n  }; //Actualizar el total a pagar\n\n\n  const actualizarTotal = () => {\n    if (productos.length === 0) {\n      setTotal(0);\n      return null;\n    }\n\n    let nuevoTotal = 0;\n    productos.map(prod => nuevoTotal += prod.cantidad * prod.precio);\n    setTotal(nuevoTotal);\n  }; //Elimina un Producto\n\n\n  const eliminarProductoPedido = id => {\n    const nuevosProductos = productos.filter(prod => prod._id != id);\n    setProductos(nuevosProductos);\n  }; //Realizar Pedido\n\n\n  const realizarPedido = async e => {\n    e.preventDefault(); //Construir el objeto\n\n    const pedido = {\n      cliente: id,\n      pedido: productos,\n      total\n    }; //Alamcenar en la bd\n\n    const resultado = await clienteAxios.post(`/pedidos/nuevo/${id}`, pedido, {\n      headers: {\n        Authorization: `Bearer ${Token}`\n      }\n    }); //leer resultado\n\n    if (resultado.status === 200) {\n      Swal.fire({\n        icon: \"success\",\n        title: \"El pedido ha sido guardado\"\n      });\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Lo siento, hubo un error\"\n      });\n    } //Redireccionar\n\n\n    props.history.push(\"/pedidos\");\n  }; //Si el cliente no existe\n\n\n  if (!cliente.nombre) {\n    return React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Nuevo Pedido\"), React.createElement(\"div\", {\n    className: \"ficha-cliente\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Datos de Cliente\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Nombre: \", `${cliente.nombre} ${cliente.apellido}`), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Telefono: \", cliente.telefono)), React.createElement(\"form\", {\n    onSubmit: buscarProducto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Busca un Producto y agrega una cantidad\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Productos:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nombre Productos\",\n    name: \"productos\",\n    required: true,\n    onChange: e => setBusqueda(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul btn-block\",\n    value: \"Buscar Producto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"resumen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, productos.map((prod, index) => React.createElement(ProductoPedido, {\n    index: index,\n    key: prod.producto,\n    producto: prod,\n    disminuirProductos: disminuirProductos,\n    aumentarProductos: aumentarProductos,\n    eliminarProductoPedido: eliminarProductoPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Total a Pagar: \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"$\", total)), total > 0 ? React.createElement(\"form\", {\n    onSubmit: realizarPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-verde btn-block\",\n    value: \"Realizar Pedido\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })) : null);\n};\n\nexport default withRouter(NuevoPedido);","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Node/Node_ReactJS/Front-end-app/src/components/pedidos/NuevoPedido.js"],"names":["React","useState","useEffect","clienteAxios","Swal","withRouter","verificacionToken","Error","ProductoPedido","NuevoPedido","props","cliente","setCliente","busqueda","setBusqueda","productos","setProductos","total","setTotal","usuario","setUsuario","Token","localStorage","getItem","verificar","match","params","id","consultarApiCliente","clienteData","get","headers","Authorization","data","e","consultarApiProductos","prod","productosData","post","productoResultado","producto","_id","cantidad","fire","icon","title","error","history","push","actualizarTotal","buscarProducto","preventDefault","disminuirProductos","i","todosProductos","aumentarProductos","length","nuevoTotal","map","precio","eliminarProductoPedido","nuevosProductos","filter","realizarPedido","pedido","resultado","status","nombre","apellido","telefono","target","value","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { verificacionToken } from \"../../config/jwt\";\r\n\r\n//Componentes\r\nimport Error from \"../layout/Error\";\r\nimport ProductoPedido from \"./ProductoPedido\";\r\n\r\nconst NuevoPedido = props => {\r\n  //State\r\n  const [cliente, setCliente] = useState({});\r\n  const [busqueda, setBusqueda] = useState(\"\");\r\n  const [productos, setProductos] = useState([]);\r\n  //const [productosSeleccionados, setProductosSeleccionados] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [usuario, setUsuario] = useState({});\r\n\r\n  //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\r\n  const Token = localStorage.getItem(\"token\");\r\n  //Verificamos el Token si es valido o no\r\n  const verificar = verificacionToken(Token);\r\n\r\n  //Traer id del cliente\r\n  const {\r\n    match: {\r\n      params: { id }\r\n    }\r\n  } = props;\r\n\r\n  //Consultar la API para traer datos del cliente\r\n  const consultarApiCliente = async () => {\r\n    try {\r\n      const clienteData = await clienteAxios.get(`/clientes/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${Token}`\r\n        }\r\n      });\r\n      setCliente(clienteData.data);\r\n    } catch (e) {\r\n      setCliente({});\r\n    }\r\n  };\r\n\r\n  //Consultar la API para traer productos consultados\r\n  const consultarApiProductos = async prod => {\r\n    try {\r\n      const productosData = await clienteAxios.post(\r\n        `/productos/busqueda/${prod}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Token}`\r\n          }\r\n        }\r\n      );\r\n\r\n      if (productosData.data[0]) {\r\n        let productoResultado = productosData.data[0];\r\n        // agregar la llave \"producto\" (copia de id)\r\n        productoResultado.producto = productosData.data[0]._id;\r\n        productoResultado.cantidad = 0;\r\n        setProductos([...productos, productoResultado]);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Lo siento no hay resultados para esa busqueda\"\r\n        });\r\n      }\r\n    } catch (e) {\r\n      setProductos([]);\r\n    }\r\n  };\r\n\r\n  //UseEffect\r\n  useEffect(() => {\r\n    if (verificar.error) {\r\n      props.history.push(\"/iniciar-sesion\");\r\n    }\r\n    setUsuario(verificar);\r\n    consultarApiCliente();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (verificar.error) {\r\n      props.history.push(\"/iniciar-sesion\");\r\n    }\r\n    setUsuario(verificar);\r\n    actualizarTotal();\r\n  }, [productos]);\r\n\r\n  //Funcion para buscar productos\r\n  const buscarProducto = e => {\r\n    e.preventDefault();\r\n    consultarApiProductos(busqueda);\r\n  };\r\n\r\n  //Funcion para actualizar la cantidad de productos\r\n  const disminuirProductos = i => {\r\n    //Copiar el arreglo original\r\n    const todosProductos = [...productos];\r\n\r\n    //Validamos si esta en 0, no puede bajar de 0\r\n    if (todosProductos[i].cantidad === 0) return;\r\n\r\n    //decremento\r\n    todosProductos[i].cantidad--;\r\n\r\n    //Almacenarlo en el state\r\n    setProductos(todosProductos);\r\n  };\r\n  const aumentarProductos = i => {\r\n    //Copiar el arreglo original\r\n    const todosProductos = [...productos];\r\n\r\n    //aumento\r\n    todosProductos[i].cantidad++;\r\n\r\n    //Almacenarlo en el state\r\n    setProductos(todosProductos);\r\n  };\r\n\r\n  //Actualizar el total a pagar\r\n  const actualizarTotal = () => {\r\n    if (productos.length === 0) {\r\n      setTotal(0);\r\n      return null;\r\n    }\r\n\r\n    let nuevoTotal = 0;\r\n    productos.map(prod => (nuevoTotal += prod.cantidad * prod.precio));\r\n    setTotal(nuevoTotal);\r\n  };\r\n\r\n  //Elimina un Producto\r\n  const eliminarProductoPedido = id => {\r\n    const nuevosProductos = productos.filter(prod => prod._id != id);\r\n    setProductos(nuevosProductos);\r\n  };\r\n\r\n  //Realizar Pedido\r\n  const realizarPedido = async e => {\r\n    e.preventDefault();\r\n    //Construir el objeto\r\n    const pedido = {\r\n      cliente: id,\r\n      pedido: productos,\r\n      total\r\n    };\r\n\r\n    //Alamcenar en la bd\r\n    const resultado = await clienteAxios.post(`/pedidos/nuevo/${id}`, pedido, {\r\n      headers: {\r\n        Authorization: `Bearer ${Token}`\r\n      }\r\n    });\r\n\r\n    //leer resultado\r\n    if (resultado.status === 200) {\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"El pedido ha sido guardado\"\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Lo siento, hubo un error\"\r\n      });\r\n    }\r\n\r\n    //Redireccionar\r\n    props.history.push(\"/pedidos\");\r\n  };\r\n\r\n  //Si el cliente no existe\r\n  if (!cliente.nombre) {\r\n    return <Error />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Nuevo Pedido</h2>\r\n\r\n      <div className=\"ficha-cliente\">\r\n        <h3>Datos de Cliente</h3>\r\n        <p>Nombre: {`${cliente.nombre} ${cliente.apellido}`}</p>\r\n        <p>Telefono: {cliente.telefono}</p>\r\n      </div>\r\n\r\n      <form onSubmit={buscarProducto}>\r\n        <legend>Busca un Producto y agrega una cantidad</legend>\r\n\r\n        <div className=\"campo\">\r\n          <label>Productos:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre Productos\"\r\n            name=\"productos\"\r\n            required\r\n            onChange={e => setBusqueda(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-azul btn-block\"\r\n          value=\"Buscar Producto\"\r\n        />\r\n      </form>\r\n\r\n      <ul className=\"resumen\">\r\n        {productos.map((prod, index) => (\r\n          <ProductoPedido\r\n            index={index}\r\n            key={prod.producto}\r\n            producto={prod}\r\n            disminuirProductos={disminuirProductos}\r\n            aumentarProductos={aumentarProductos}\r\n            eliminarProductoPedido={eliminarProductoPedido}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <p className=\"total\">\r\n        Total a Pagar: <span>${total}</span>\r\n      </p>\r\n      {total > 0 ? (\r\n        <form onSubmit={realizarPedido}>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-verde btn-block\"\r\n            value=\"Realizar Pedido\"\r\n          />\r\n        </form>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(NuevoPedido);\r\n"]},"metadata":{},"sourceType":"module"}