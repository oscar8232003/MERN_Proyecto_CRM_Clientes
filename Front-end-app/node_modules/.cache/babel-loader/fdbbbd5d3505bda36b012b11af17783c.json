{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport Swal from \"sweetalert2\";\nexport const tipos_error = error => {\n  if (error === \"TokenExpiredError\") {\n    return \"Su Sesion ha Expirado\";\n  }\n\n  if (error === \"JsonWebTokenError\") {\n    return \"Lo siento, hubo un error\";\n  }\n\n  if (error === \"NotBeforeError\") {\n    return \"Lo siento, hubo un error\";\n  }\n};\nexport const alertaError = error => {\n  let timerInterval;\n  Swal.fire({\n    icon: \"error\",\n    title: tipos_error(error),\n    timer: 5000,\n    timerProgressBar: true,\n    onBeforeOpen: () => {\n      Swal.showLoading();\n      timerInterval = setInterval(() => {\n        const content = Swal.getContent();\n\n        if (content) {\n          const b = content.querySelector(\"b\");\n\n          if (b) {\n            b.textContent = Swal.getTimerLeft();\n          }\n        }\n      }, 100);\n    },\n    onClose: () => {\n      clearInterval(timerInterval);\n    }\n  });\n};\nexport const verificacionToken = Token => {\n  try {\n    const respuesta = jwt.verify(Token, \"LlaveSecreta\");\n    return respuesta;\n  } catch (err) {\n    return {\n      error: err.name\n    };\n  }\n};\nexport const getToken = () => {\n  return localStorage.getItem(\"token\");\n};\nexport const verificacionToken2 = () => {\n  const token = localStorage.getItem(\"token\");\n\n  try {\n    const respuesta = jwt.verify(token, \"LlaveSecreta\");\n    return respuesta;\n  } catch (err) {\n    return {\n      error: err.name\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/oscar/Desktop/MERN_Proyecto_CRM_Clientes/Front-end-app/src/config/jwt.js"],"names":["jwt","Swal","tipos_error","error","alertaError","timerInterval","fire","icon","title","timer","timerProgressBar","onBeforeOpen","showLoading","setInterval","content","getContent","b","querySelector","textContent","getTimerLeft","onClose","clearInterval","verificacionToken","Token","respuesta","verify","err","name","getToken","localStorage","getItem","verificacionToken2","token"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAClC,MAAIA,KAAK,KAAK,mBAAd,EAAmC;AACjC,WAAO,uBAAP;AACD;;AACD,MAAIA,KAAK,KAAK,mBAAd,EAAmC;AACjC,WAAO,0BAAP;AACD;;AACD,MAAIA,KAAK,KAAK,gBAAd,EAAgC;AAC9B,WAAO,0BAAP;AACD;AACF,CAVM;AAWP,OAAO,MAAMC,WAAW,GAAGD,KAAK,IAAI;AAClC,MAAIE,aAAJ;AACAJ,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRC,IAAAA,IAAI,EAAE,OADE;AAERC,IAAAA,KAAK,EAAEN,WAAW,CAACC,KAAD,CAFV;AAGRM,IAAAA,KAAK,EAAE,IAHC;AAIRC,IAAAA,gBAAgB,EAAE,IAJV;AAKRC,IAAAA,YAAY,EAAE,MAAM;AAClBV,MAAAA,IAAI,CAACW,WAAL;AACAP,MAAAA,aAAa,GAAGQ,WAAW,CAAC,MAAM;AAChC,cAAMC,OAAO,GAAGb,IAAI,CAACc,UAAL,EAAhB;;AACA,YAAID,OAAJ,EAAa;AACX,gBAAME,CAAC,GAAGF,OAAO,CAACG,aAAR,CAAsB,GAAtB,CAAV;;AACA,cAAID,CAAJ,EAAO;AACLA,YAAAA,CAAC,CAACE,WAAF,GAAgBjB,IAAI,CAACkB,YAAL,EAAhB;AACD;AACF;AACF,OAR0B,EAQxB,GARwB,CAA3B;AASD,KAhBO;AAiBRC,IAAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,aAAa,CAAChB,aAAD,CAAb;AACD;AAnBO,GAAV;AAqBD,CAvBM;AAwBP,OAAO,MAAMiB,iBAAiB,GAAGC,KAAK,IAAI;AACxC,MAAI;AACF,UAAMC,SAAS,GAAGxB,GAAG,CAACyB,MAAJ,CAAWF,KAAX,EAAkB,cAAlB,CAAlB;AACA,WAAOC,SAAP;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,WAAO;AAAEvB,MAAAA,KAAK,EAAEuB,GAAG,CAACC;AAAb,KAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,QAAMC,KAAK,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAI;AACF,UAAMN,SAAS,GAAGxB,GAAG,CAACyB,MAAJ,CAAWO,KAAX,EAAkB,cAAlB,CAAlB;AACA,WAAOR,SAAP;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,WAAO;AAAEvB,MAAAA,KAAK,EAAEuB,GAAG,CAACC;AAAb,KAAP;AACD;AACF,CARM","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const tipos_error = error => {\r\n  if (error === \"TokenExpiredError\") {\r\n    return \"Su Sesion ha Expirado\";\r\n  }\r\n  if (error === \"JsonWebTokenError\") {\r\n    return \"Lo siento, hubo un error\";\r\n  }\r\n  if (error === \"NotBeforeError\") {\r\n    return \"Lo siento, hubo un error\";\r\n  }\r\n};\r\nexport const alertaError = error => {\r\n  let timerInterval;\r\n  Swal.fire({\r\n    icon: \"error\",\r\n    title: tipos_error(error),\r\n    timer: 5000,\r\n    timerProgressBar: true,\r\n    onBeforeOpen: () => {\r\n      Swal.showLoading();\r\n      timerInterval = setInterval(() => {\r\n        const content = Swal.getContent();\r\n        if (content) {\r\n          const b = content.querySelector(\"b\");\r\n          if (b) {\r\n            b.textContent = Swal.getTimerLeft();\r\n          }\r\n        }\r\n      }, 100);\r\n    },\r\n    onClose: () => {\r\n      clearInterval(timerInterval);\r\n    }\r\n  });\r\n};\r\nexport const verificacionToken = Token => {\r\n  try {\r\n    const respuesta = jwt.verify(Token, \"LlaveSecreta\");\r\n    return respuesta;\r\n  } catch (err) {\r\n    return { error: err.name };\r\n  }\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const verificacionToken2 = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const respuesta = jwt.verify(token, \"LlaveSecreta\");\r\n    return respuesta;\r\n  } catch (err) {\r\n    return { error: err.name };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}