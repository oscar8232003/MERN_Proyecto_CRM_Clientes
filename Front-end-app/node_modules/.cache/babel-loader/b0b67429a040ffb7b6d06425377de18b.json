{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Node_ReactJS\\\\Front-end-app\\\\src\\\\components\\\\clientes\\\\NuevoCliente.js\";\nimport React, { useState, useEffect } from \"react\";\nimport clienteAxios from \"../../config/axios\";\nimport Swal from \"sweetalert2\";\nimport { withRouter } from \"react-router-dom\";\nimport { verificacionToken, verificacionToken2, getToken } from \"../../config/jwt\";\n\nconst NuevoCliente = ({\n  history\n}) => {\n  //Estados\n  const [cliente, setCliente] = useState({\n    nombre: \"\",\n    apellido: \"\",\n    empresa: \"\",\n    email: \"\",\n    telefono: \"\"\n  });\n  const [usuario, setUsuario] = useState({}); //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\n  //const Token = localStorage.getItem(\"token\");\n  //Verificamos el Token si es valido o no\n\n  const verificar = verificacionToken2();\n\n  const actualizarState = e => {\n    setCliente({ ...cliente,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    if (verificar.error) {\n      history.push(\"/iniciar-sesion\");\n    }\n\n    setUsuario(verificar);\n  }, []); //AÃ±ade en la REST API un cliente nuevo\n\n  const agregarCliente = e => {\n    e.preventDefault(); //Enviar peticion\n\n    clienteAxios.post(\"/clientes\", cliente, {\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    }).then(response => {\n      //Validar errores\n      if (response.data.code) {\n        Swal.fire({\n          title: \"Hubo un error\",\n          text: \"No se pudo agregar el cliente al sistema\",\n          icon: \"error\",\n          confirmButtonText: \"Bueno\",\n          showCloseButton: true\n        }).then(() => {\n          //Redireccionar\n          history.push(\"/\");\n        });\n      } else {\n        Swal.fire({\n          title: \"Cliente Agregado al sistema\",\n          text: \"Se agrego correctamente el cliente al sistema\",\n          icon: \"success\",\n          confirmButtonText: \"Perfecto\",\n          showCloseButton: true\n        }).then(() => {\n          //Redireccionar\n          history.push(\"/\");\n        });\n      }\n    });\n  };\n\n  const validarCliente = () => {\n    //Destructuring\n    const {\n      nombre,\n      apellido,\n      email,\n      empresa,\n      telefono\n    } = cliente;\n    let valido = true; //Revisar el contenido en el state\n\n    valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n    return valido;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Nuevo cliente\"), React.createElement(\"form\", {\n    onSubmit: agregarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Llena todos los campos\"), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Nombre:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nombre Cliente\",\n    name: \"nombre\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Apellido:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Apellido Cliente\",\n    name: \"apellido\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Empresa:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Empresa Cliente\",\n    name: \"empresa\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Cliente\",\n    name: \"email\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Tel\\xE9fono:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Tel\\xE9fono Cliente\",\n    name: \"telefono\",\n    onChange: actualizarState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"enviar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-azul\",\n    value: \"Agregar Cliente\",\n    disabled: validarCliente(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(NuevoCliente);","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Node_ReactJS/Front-end-app/src/components/clientes/NuevoCliente.js"],"names":["React","useState","useEffect","clienteAxios","Swal","withRouter","verificacionToken","verificacionToken2","getToken","NuevoCliente","history","cliente","setCliente","nombre","apellido","empresa","email","telefono","usuario","setUsuario","verificar","actualizarState","e","target","name","value","error","push","agregarCliente","preventDefault","post","headers","Authorization","then","response","data","code","fire","title","text","icon","confirmButtonText","showCloseButton","validarCliente","valido","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  verificacionToken,\r\n  verificacionToken2,\r\n  getToken\r\n} from \"../../config/jwt\";\r\n\r\nconst NuevoCliente = ({ history }) => {\r\n  //Estados\r\n  const [cliente, setCliente] = useState({\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    empresa: \"\",\r\n    email: \"\",\r\n    telefono: \"\"\r\n  });\r\n  const [usuario, setUsuario] = useState({});\r\n\r\n  //Traemos el Token del localStorage, tiene que ser directo sino toma el token expirado\r\n  //const Token = localStorage.getItem(\"token\");\r\n  //Verificamos el Token si es valido o no\r\n  const verificar = verificacionToken2();\r\n\r\n  const actualizarState = e => {\r\n    setCliente({\r\n      ...cliente,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (verificar.error) {\r\n      history.push(\"/iniciar-sesion\");\r\n    }\r\n    setUsuario(verificar);\r\n  }, []);\r\n\r\n  //AÃ±ade en la REST API un cliente nuevo\r\n  const agregarCliente = e => {\r\n    e.preventDefault();\r\n\r\n    //Enviar peticion\r\n    clienteAxios\r\n      .post(\"/clientes\", cliente, {\r\n        headers: {\r\n          Authorization: `Bearer ${getToken()}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        //Validar errores\r\n        if (response.data.code) {\r\n          Swal.fire({\r\n            title: \"Hubo un error\",\r\n            text: \"No se pudo agregar el cliente al sistema\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Bueno\",\r\n            showCloseButton: true\r\n          }).then(() => {\r\n            //Redireccionar\r\n            history.push(\"/\");\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Cliente Agregado al sistema\",\r\n            text: \"Se agrego correctamente el cliente al sistema\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Perfecto\",\r\n            showCloseButton: true\r\n          }).then(() => {\r\n            //Redireccionar\r\n            history.push(\"/\");\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const validarCliente = () => {\r\n    //Destructuring\r\n    const { nombre, apellido, email, empresa, telefono } = cliente;\r\n    let valido = true;\r\n    //Revisar el contenido en el state\r\n    valido =\r\n      !nombre.length ||\r\n      !apellido.length ||\r\n      !email.length ||\r\n      !empresa.length ||\r\n      !telefono.length;\r\n\r\n    return valido;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Nuevo cliente</h2>\r\n      <form onSubmit={agregarCliente}>\r\n        <legend>Llena todos los campos</legend>\r\n\r\n        <div className=\"campo\">\r\n          <label>Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre Cliente\"\r\n            name=\"nombre\"\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Apellido:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Apellido Cliente\"\r\n            name=\"apellido\"\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Empresa:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Empresa Cliente\"\r\n            name=\"empresa\"\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Cliente\"\r\n            name=\"email\"\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>TelÃ©fono:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"TelÃ©fono Cliente\"\r\n            name=\"telefono\"\r\n            onChange={actualizarState}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"enviar\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-azul\"\r\n            value=\"Agregar Cliente\"\r\n            disabled={validarCliente()}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(NuevoCliente);\r\n"]},"metadata":{},"sourceType":"module"}